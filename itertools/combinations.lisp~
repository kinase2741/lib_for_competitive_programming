(defun combinations (xs)
  (let ((acc nil))
    (loop for i below (ash 1 (length xs)) do
          (let ((acc-sub nil)
                (xs-sub (copy-seq xs)))
            (loop for j below (length xs-sub) do
                  (when (zerop (logand 1 (ash i (- j))))
                    (push (first xs-sub) acc-sub))
                  (pop xs-sub))
            (push (reverse acc-sub) acc)))
    acc))
